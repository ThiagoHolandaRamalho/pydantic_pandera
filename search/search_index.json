{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documenta\u00e7\u00e3o Pipeline Cyber Picpay","text":""},{"location":"#fluxo-do-processo","title":"Fluxo do processo","text":"<pre><code>graph TD;\n    A[In\u00edcio] --&gt; B[Tentar requisi\u00e7\u00e3o];\n    B --&gt; C{Status code 200?};\n    C -- N\u00e3o --&gt; B;\n    C -- Sim --&gt; D[Validar contrato dos dados];\n    D --&gt; E{Response dentro do contrato?};\n    E -- N\u00e3o --&gt; F[Abortar processo];\n    F --&gt; F1[Enviar e-mail de erro];\n    E -- Sim --&gt; G[Gravar log de sucesso];\n    G --&gt; H[Executar ETL];\n    H --&gt; I{ETL executado com sucesso?};\n    I -- N\u00e3o --&gt; J[Abortar processo];\n    J --&gt; J1[Enviar e-mail de erro];\n    I -- Sim --&gt; K[Exportar resultado para CSV];\n    K --&gt; L[Processar arquivos CSV];\n    L --&gt; M[Salvar resultado no DuckDB];\n\n</code></pre>"},{"location":"#end-points","title":"End points","text":""},{"location":"contrato_de_dados/","title":"Contrato de Dados","text":""},{"location":"contrato_de_dados/#contrato","title":"Contrato","text":"<p>               Bases: <code>SchemaModel</code></p> <p>Esquema de valida\u00e7\u00e3o para DataFrames relacionados a ap\u00f3lices corporativas.</p> <p>Esta classe valida os dados de ap\u00f3lices corporativas, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>cd_apolice</code> <code>Series[int]</code> <p>C\u00f3digo identificador da ap\u00f3lice (obrigat\u00f3rio).</p> <code>nm_produto</code> <code>Series[str]</code> <p>Nome do produto associado \u00e0 ap\u00f3lice (obrigat\u00f3rio).</p> <code>quantidade</code> <code>Series[int]</code> <p>Quantidade de itens associados \u00e0 ap\u00f3lice (\u2265 0).</p> <code>valor</code> <code>Series[float]</code> <p>Valor monet\u00e1rio associado \u00e0 ap\u00f3lice (\u2265 0.0).</p> <code>dt_emissao</code> <code>Series[datetime]</code> <p>Data de emiss\u00e3o da ap\u00f3lice (obrigat\u00f3rio).</p> <code>dv_documento_oficial</code> <code>Series[bool]</code> <p>Indicador se h\u00e1 documento oficial v\u00e1lido.</p> Source code in <code>src\\schema_pandera.py</code> <pre><code>class SchemaCorpApolice(pa.SchemaModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para DataFrames relacionados a ap\u00f3lices corporativas.\n\n    Esta classe valida os dados de ap\u00f3lices corporativas, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes: \n        cd_apolice (Series[int]): C\u00f3digo identificador da ap\u00f3lice (obrigat\u00f3rio).\n        nm_produto (Series[str]): Nome do produto associado \u00e0 ap\u00f3lice (obrigat\u00f3rio).\n        quantidade (Series[int]): Quantidade de itens associados \u00e0 ap\u00f3lice (\u2265 0).\n        valor (Series[float]): Valor monet\u00e1rio associado \u00e0 ap\u00f3lice (\u2265 0.0).\n        dt_emissao (Series[datetime]): Data de emiss\u00e3o da ap\u00f3lice (obrigat\u00f3rio).\n        dv_documento_oficial (Series[bool]): Indicador se h\u00e1 documento oficial v\u00e1lido.\n    \"\"\"\n\n    cd_apolice: Series[int] = pa.Field(ge=1, description=\"C\u00f3digo da ap\u00f3lice (\u2265 1)\")\n    nm_produto: Series[str] = pa.Field(nullable=False, description=\"Nome do produto\")\n    quantidade: Series[int] = pa.Field(ge=0, description=\"Quantidade de itens (\u2265 0)\")\n    valor: Series[float] = pa.Field(ge=0.0, description=\"Valor da ap\u00f3lice (\u2265 0.0)\")\n    dt_emissao: Series[datetime] = pa.Field(description=\"Data de emiss\u00e3o da ap\u00f3lice\")\n    dv_documento_oficial: Series[bool] = pa.Field(description=\"Documento oficial v\u00e1lido (True/False)\")\n\n    class Config:\n        \"\"\"\n        Configura\u00e7\u00f5es adicionais do esquema.\n\n        Attributes:\n            coerce (bool): Converte automaticamente os tipos de dados.\n            strict (bool): Garante que apenas as colunas definidas s\u00e3o aceitas.\n        \"\"\"\n        coerce = True  # For\u00e7a a convers\u00e3o para os tipos definidos no esquema\n        strict = True  # Apenas aceita colunas explicitamente definidas no esquema\n\n    @staticmethod\n    def validar(df: DataFrame) -&gt; DataFrame: \n        \"\"\"\n        Valida um DataFrame conforme o esquema definido.\n\n        Args:\n            df (DataFrame): DataFrame a ser validado.\n\n        Returns:\n            DataFrame: DataFrame validado.\n\n        Raises:\n            pa.errors.SchemaError: Se os dados n\u00e3o atenderem aos requisitos do esquema.\n        \"\"\"\n        return SchemaCorpApolice.validate(df)\n</code></pre>"},{"location":"contrato_de_dados/#src.schema_pandera.SchemaCorpApolice.Config","title":"<code>Config</code>","text":"<p>Configura\u00e7\u00f5es adicionais do esquema.</p> <p>Attributes:</p> Name Type Description <code>coerce</code> <code>bool</code> <p>Converte automaticamente os tipos de dados.</p> <code>strict</code> <code>bool</code> <p>Garante que apenas as colunas definidas s\u00e3o aceitas.</p> Source code in <code>src\\schema_pandera.py</code> <pre><code>class Config:\n    \"\"\"\n    Configura\u00e7\u00f5es adicionais do esquema.\n\n    Attributes:\n        coerce (bool): Converte automaticamente os tipos de dados.\n        strict (bool): Garante que apenas as colunas definidas s\u00e3o aceitas.\n    \"\"\"\n    coerce = True  # For\u00e7a a convers\u00e3o para os tipos definidos no esquema\n    strict = True  # Apenas aceita colunas explicitamente definidas no esquema\n</code></pre>"},{"location":"contrato_de_dados/#src.schema_pandera.SchemaCorpApolice.validar","title":"<code>validar(df)</code>  <code>staticmethod</code>","text":"<p>Valida um DataFrame conforme o esquema definido.</p> <p>Parameters:</p> Name Type Description Default <code>df</code> <code>DataFrame</code> <p>DataFrame a ser validado.</p> required <p>Returns:</p> Name Type Description <code>DataFrame</code> <code>DataFrame</code> <p>DataFrame validado.</p> <p>Raises:</p> Type Description <code>SchemaError</code> <p>Se os dados n\u00e3o atenderem aos requisitos do esquema.</p> Source code in <code>src\\schema_pandera.py</code> <pre><code>@staticmethod\ndef validar(df: DataFrame) -&gt; DataFrame: \n    \"\"\"\n    Valida um DataFrame conforme o esquema definido.\n\n    Args:\n        df (DataFrame): DataFrame a ser validado.\n\n    Returns:\n        DataFrame: DataFrame validado.\n\n    Raises:\n        pa.errors.SchemaError: Se os dados n\u00e3o atenderem aos requisitos do esquema.\n    \"\"\"\n    return SchemaCorpApolice.validate(df)\n</code></pre>"}]}